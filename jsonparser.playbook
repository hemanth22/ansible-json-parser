---
- hosts: vhost
  gather_facts: false
  connection: local
  become: true
  vars:
    domain_definition: "{{ lookup('file','file.json') | from_json}}"

  tasks:
    - name: Display all cluster names
      ansible.builtin.debug:
        msg:  "{{  domain_definition  }}"

    - name: Display all server names
      ansible.builtin.debug:
        msg: "{{ domain_definition | community.general.json_query('domain_definition.domain.server[*].name') }}"

    - name: nslookup for servers in items
      ansible.builtin.shell: nslookup {{ item }}
      loop: "{{ domain_definition | community.general.json_query('domain_definition.domain.server[*].name') }}"
      register: output
    
    - name: debug the output of ping
      ansible.builtin.debug:
        var: output

    - name: Display all ports from cluster1
      ansible.builtin.debug:
        var: item
      loop: "{{ domain_definition | community.general.json_query(server_name_cluster1_query) }}"
      vars:
        server_name_cluster1_query: "domain_definition.domain.server[?cluster=='cluster1'].port"

    - name: Display all ports from cluster1 as a string
      ansible.builtin.debug:
        msg: "{{ domain_definition | community.general.json_query('domain_definition.domain.server[?cluster==`cluster1`].port') | join(', ') }}"

    - name: Display all ports from cluster1
      ansible.builtin.debug:
        var: item
      loop: "{{ domain_definition | community.general.json_query('domain_definition.domain.server[?cluster==''cluster1''].port') }}"

    - name: Display all server ports and names from cluster1
      ansible.builtin.debug:
	var: item
      loop: "{{ domain_definition | community.general.json_query(server_name_cluster1_query) }}"
      vars:
	server_name_cluster1_query: "domain_definition.domain.server[?cluster=='cluster2'].{name: name, port: port}"
